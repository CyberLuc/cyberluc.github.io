<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag:Archlinux | CyberLuc's Blog]]></title>
  <link href="http://www.cyberluc29.tk/tags/archlinux/atom.xml" rel="self"/>
  <link href="http://www.cyberluc29.tk/"/>
  <updated>2014-04-22T11:39:21+08:00</updated>
  <id>http://www.cyberluc29.tk/</id>
  <author>
    <name><![CDATA[CyberLuc]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[测试001]]></title>
    <link href="http://www.cyberluc29.tk/blog/2013/07/31/test001/"/>
    <updated>2013-07-31T12:52:00+08:00</updated>
    <id>http://www.cyberluc29.tk/blog/2013/07/31/test001</id>
    <content type="html"><![CDATA[<p>这是Octopress部分功能的测试</p>

<!--more-->

<p>This is some text.<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. Other text.<sup id="fnref:footnote"><a href="#fn:footnote" rel="footnote">2</a></sup>.</p>

<pre><code>Here comes some code.
</code></pre>

<p>测试一下数学公式</p>

<p>$X<em>1, X</em>2, X_3$</p>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{align*}
  & \phi(x,y) = \phi \left(\sum_{i=1}^n x_ie_i, \sum_{j=1}^n y_je_j \right)
  = \sum_{i=1}^n \sum_{j=1}^n x_i y_j \phi(e_i, e_j) = \\
  & (x_1, \ldots, x_n) \left( \begin{array}{ccc}
      \phi(e_1, e_1) & \cdots & \phi(e_1, e_n) \\
      \vdots & \ddots & \vdots \\
      \phi(e_n, e_1) & \cdots & \phi(e_n, e_n)
    \end{array} \right)
  \left( \begin{array}{c}
      y_1 \\
      \vdots \\
      y_n
    \end{array} \right)
\end{align*}
 %]]&gt;</script>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{align}
\mbox{Union: } & A\cup B = \{x\mid x\in A \mbox{ or } x\in B\} \\
\mbox{Concatenation: } & A\circ B  = \{xy\mid x\in A \mbox{ and } y\in B\} \\
\mbox{Star: } & A^\star  = \{x_1x_2\ldots x_k \mid  k\geq 0 \mbox{ and each } x_i\in A\} \\
\end{align}
 %]]&gt;</script>

<p>段内插入LaTeX代码是这样的：$\exp(-\frac{x^2}{2})$，试试看看吧</p>
<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>test<a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:footnote">
      <p>必须被引用到才能实现上标<a href="#fnref:footnote" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Archlinux安装小记]]></title>
    <link href="http://www.cyberluc29.tk/blog/2013/07/31/archlinux-installation/"/>
    <updated>2013-07-31T10:07:00+08:00</updated>
    <id>http://www.cyberluc29.tk/blog/2013/07/31/archlinux-installation</id>
    <content type="html"><![CDATA[<p>不知不觉已经使用了Archlinux好几个月的时间了，期间也记录了一些安装使用中遇到的问题，最近又把arch重新装了一遍，这里把整理后的安装记录发上来。</p>

<p>Arch的安装过程是全命令行的，连Debian那样的字符模拟图形界面也不会提供，不过安装过程还是相当简单的。</p>

<!-- more -->

<p>我是从Debian下转到Archlinux，手头正好有一个不用的U盘，于是便按照ArchWiki的说明将U盘写入archlinux的iso镜像。用<code>syslinux</code>的那个方法我试了，但是记得没用，以后哪天再去研究一下吧。</p>

<p><code>lsblk</code>找到u盘的设备名，比如我的是<code>/dev/sdb</code></p>

<p>注意这个方法是会格式化u盘数据的！</p>

<p>{% codeblock 写入USB %}
# dd bs=4M if=/home/twtwtw/Downloads/archlinux-2013.07.01-dual.iso of=/dev/sdb
{% endcodeblock %}</p>

<p>然后重启开始安装Archlinux。</p>

<h3 id="section">1.分区</h3>
<p>使用cfdisk可以很方便的给磁盘分区，我给arch划出了大约200个G，分别划分了/boot 200M，/ 90G，/home 140G，swap 8G。</p>

<h3 id="section-1">2.格式化</h3>
<p>对磁盘进行格式化，可以使用如下的命令，将其中的x替换为对应的磁盘符号
{% codeblock 格式化 %}
# mkfs.ext4 /dev/sdx                 //格式化为ext4
# mkswap /dev/sdx &amp;&amp; swapon /dev/sdx //格式化swap并挂载
{% endcodeblock %}</p>

<h3 id="section-2">3.挂载</h3>
<p>接下来开始挂载分区，此时挂载分区一是为了正常安装系统，二是为了生成fstab，这个文件记录了磁盘挂载的信息，开机后按照文件内容会自动挂载。这里可以把Windos系统的NTFS分区也给挂载上，不过记得后面要装<code>ntfs-3g</code>，否则开机会报错。
{% codeblock 挂载 %}
# mount /dev/sdx /mnt <!-- 测试 -->
# mkdir /mnt/{boot,var,home}
# mount /dev/sd{9,10} /mnt/{boot,home}
{% endcodeblock %}</p>

<h3 id="pacman">4.调整网络，修改Pacman源</h3>
<p>{% codeblock 调整网络，修改Pacman源 %}
// dhcpcd、wifi-menu、ifconfig、iwconfig均可使用，我直接连接路由，arch已经自动dhcp
# vi /etc/pacman.d/mirrorlist //找到其中的China标记的项，去掉注释
{% endcodeblock %}
这些是China的源加在网上找的一些据说不错的源:
{% codeblock /etc/pacman.d/mirrorlist %}
Server = http://mirrors.163.com/archlinux/$repo/os/$arch
Server = http://mirror.hust.edu.cn/archlinux/$repo/os/$arch
Server = http://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch
Server = http://mirrors.stuhome.net/archlinux/$repo/os/$arch
Server = http://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch
Server = http://mirrors.neusoft.edu.cn/archlinux/$repo/os/$arch
Server = http://lug.mtu.edu/archlinux/$repo/os/$arch
Server = http://mirror.umd.edu/archlinux/$repo/os/$arch
Server = http://mirrors.liquidweb.com/archlinux/$repo/os/$arch
Server = http://cosmos.cites.illinois.edu/pub/archlinux/$repo/os/$arch
{% endcodeblock %}
### 5.安装系统基本组件和grub-bios
{% codeblock 安装系统基本组件 %}
# pacstrap /mnt base base-devel grub-bios
{% endcodeblock %}</p>

<h3 id="fstab">6.生成fstab</h3>
<p><code>-p</code>这里表示生成以设备名为标识的fstab，比如/dev/sda等
<code>-U</code>标记可以生成UUID为标识的fstab
{% codeblock 生成fstab lang:bash %}
# genfstab -p /mnt » /mnt/etc/fstab
{% endcodeblock %}
然后就等待慢慢下载安装吧。</p>

<h3 id="section-3">7.切换到安装好的系统</h3>
<p>{% codeblock 切换到安装好的系统 %}
# arch-chroot /mnt
{% endcodeblock %}</p>

<h3 id="section-4">8.设置主机名</h3>
<p>主机名写在文件<code>/etc/hostname</code>里边，写入就好。
{% codeblock 设置主机名 %}
# echo Cryo-Nyx &gt; /etc/hostname
{% endcodeblock %}</p>

<h3 id="locale">9.修改locale</h3>
<p>我想要系统仍旧以英文显示各种提示，所以这里仅仅修改<code>LC_CTYPE</code>为<code>zh_CN.UTF-8</code>。
{% codeblock 修改locale %}
# vi /etc/locale.conf    //添加LANG=en_US.UTF-8，LC_CTYPE=zh_CN.UTF-8
# vi /etc/locale.gen     //取消需要的locale前注释
# locale-gen
{% endcodeblock %}</p>

<h3 id="section-5">10.设置时区与硬件时钟</h3>
<p>这一步设置本地时区
{% codeblock 设置本地时区 %}
# ln -s /usr/share/zoneinfo/Asia/Chongqing /etc/localtime
# hwclock –systohc –utc
{% endcodeblock %}</p>

<h3 id="section-6">11.设置键盘布局</h3>
<p>这一步可以在tty下进行键盘布局的设置，比如交换CapsLock和Escape，方便VIM操作
{% codeblock 设置TTY下键盘布局 %}
# cd /usr/share/kbd/keymaps/i386/qwerty/
# cp us.map.gz twtwtw.map.gz
# gunzip twtwwt.map.gz
# vi twtwtw.map.gz
//找到CapsLock和Escape的键位，互换其值
# vi /etc/vconsole.conf  //添加<code>KEYMAP=twtwtw</code>
{% endcodeblock %}</p>

<h3 id="linux">12.创建引导linux内核的初始环境</h3>
<p><code>-p</code>是preset的意思，也就是以预设的linux配置文件生成。</p>

<p>如果是intel集显的话，可以在<code>/etc/mkinitcpio.conf</code>的<code>MODULE</code>里边添加<code>i915</code>打开KMS。</p>

<p>详情参照这里<a href="https://wiki.archlinux.org/index.php/Intel_Graphics">ArchWiki: Intel Grapchis</a>。
{% codeblock 创建引导linux内核的初始环境 %}
# vi /etc/mkinitcpio.conf //在MODULES里添加i915
# mkinitcpio -p linux
{% endcodeblock %}</p>

<h3 id="grubdevsda">13.安装grub到/dev/sda上并生成初始配置</h3>
<p>{% codeblock 安装grub %}
# grub-install /dev/sda  //将grub安装到sda上
# cp /usr/share/locale/en\@quot\LC_MESSAGES /boot/grub/locale/en.mo //不然开机加载grub时会提示en.mo not found
# pacman -S os-prober    //如果还装有Win系统的话
# grub-mkconfig -o /boot/grub/grub.cfg
{% endcodeblock %}</p>

<h3 id="section-7">14.添加用户</h3>
<p>{% codeblock 添加用户 %}
#useradd -d /home/twtwtw -m twtwtw
#usermod -G audio,video,wheel,users,games,optical,storage,lp twtwtw //将用户添加到xxxx各个组
{% endcodeblock %}</p>

<h3 id="section-8">14.修改初始密码</h3>
<p>{% codeblock 修改初始密码 %}
# passwd //修改root密码
# passwd twtwtw //修改用户密码
{% endcodeblock %}</p>

<h2 id="section-9">15.安装基本系统软件</h2>
<p>安装系统一些基本的软件，这些base包并没有提供。</p>

<p>Archlinux使用ip和netctl工具来进行网络管理，不过以前用惯了ifconfig，这里也一起装上吧。</p>

<p><code>net-tools</code>提供了<code>ifconfig</code>工具
<code>wireless_tools</code>提供了<code>iwconfig</code>和<code>iwlist</code>
{% codeblock 安装基本系统软件 %}
# pacman -S sudo gksu vim net-tools wireless_tools  dialog wpa_supplicant dhcpcd ntfs-3
{% endcodeblock %}
然后visudo，把自己的用户加上管理员权限</p>

<h3 id="section-10">15.安装桌面环境</h3>
<p>我使用的是<code>Awesome</code>这款wm，并没有使用dm。
{% codeblock 安装桌面环境 %}
# pacman -S xorg-{server,server-utils,utils,xinit} xterm xf86-video-intel mesa alsa-utils feh awesome vicious xcompmgr
{% endcodeblock %}</p>

<h3 id="section-11">16.安装完成</h3>
<p>安装完成，重启进入系统。
{% codeblock 安装完成 %}
# exit
# umount -a
# reboot
{% endcodeblock %}</p>

<h3 id="xinitrc">17.xinitrc</h3>
<p>修改<code>.xinitrc</code>，添加<code>exec awesome</code></p>

<p><code>bash 我的.xinitrc
#!/bin/zsh
numlockx
xbacklight -set 0
#setxkbmap -option ctrl:nocaps
exec awesome
</code></p>

<h3 id="section-12">关于字体</h3>
<p>有几个字体是必下，比如community里的<code>wqy-microhei</code>，<code>wqy-zenhei</code>，还有aur里的<code>ttf-dejavusans-yuanti</code>，以及<code>ttf-droid-sans</code>,<code>ttf-microsoft-yahei</code>也可以装上，都是很不错的字体。
{% codeblock 字体 %}
# pacman -S xorg-font-{util,utils,100dpi,75dpi,alias}
{% endcodeblock %}</p>

<h3 id="section-13">常用软件</h3>
<p><code>text 常用软件
firefox                    //不解释
rdesktop                   //远程桌面
banshee                    //听歌还不错，不过ncmpcpp作为字符下的也还可以
mplayer
smplayer
chmsee
foxitreader                //比evince好用
eof,gthumb                 //不错的看图软件
bc                         //命令行下的计算器
emacs
xbacklight    //可以设置笔记本的亮度，对于无法保存亮度的笔记本来说很方便
numlockx      //自动打开小键盘
</code></p>

<p>已经安装了好久了，当时也没记录多详细，就这些内容了。</p>

<p>系统配置上的问题，以后想起来了再发吧。</p>
]]></content>
  </entry>
  
</feed>
